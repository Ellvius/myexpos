// Load boot module
loadi(54,67);
loadi(55,68);

// Load idle code
loadi(69,11);

SP = 76 * 512 - 1;

call BOOT_MODULE;

// For idle process

PTBR = PAGE_TABLE_BASE; 
PTLR = 10;

// Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

// Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

// Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack
[PTBR+16] = 70;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

// Process table for idle process
[PROCESS_TABLE ] = 0;                       // Tick
[PROCESS_TABLE + 1] = 0;                    // PID
[PROCESS_TABLE + 3] = KERNEL;               // USERID
[PROCESS_TABLE + 4] = RUNNING;              // Process status
[PROCESS_TABLE + 11] = 76;                  // User area page
[PROCESS_TABLE + 12] = 0;                   // KPTR
[PROCESS_TABLE + 13] = 4096;                // UPTR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;     // PTBR
[PROCESS_TABLE + 15] = 10;                  // PTLR

[70 * 512] = [69*512 + 1];


// SWAPPER_DAEMON

PTBR = PAGE_TABLE_BASE + 20 * SWAPPER_DAEMON; 
PTLR = 10;

// Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

// Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

// Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

// Process table for swapper daemon
alias processTable R0;
processTable = PROCESS_TABLE + SWAPPER_DAEMON * 16;
[processTable ] = 0;                                   // Tick
[processTable + 1] = SWAPPER_DAEMON;                   // PID
[processTable + 3] = KERNEL;                           // USERID
[processTable + 4] = CREATED;                          // Process status
[processTable + 11] = 82;                              // User area page
[processTable + 12] = 0;                               // KPTR
[processTable + 13] = 4096;                            // UPTR
[processTable + 14] = PAGE_TABLE_BASE + 20 * 15;       // PTBR
[processTable + 15] = 10;                              // PTLR

[81 * 512] = [69*512 + 1];


PTBR = PAGE_TABLE_BASE;
PTLR = 10;

[SYSTEM_STATUS_TABLE + 1] = 0;
SP = 4096;

ireturn;